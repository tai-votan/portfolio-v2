import type { Metadata } from "next";
import { Kanit } from "next/font/google";
import { notFound } from "next/navigation";
import { NextIntlClientProvider, useMessages } from "next-intl";
import dynamic from "next/dynamic";

import { StoreProvider, ThemeProvider } from "@/lib/provider";
import { locales } from "@/navigation";
import "./globals.css";

const Header = dynamic(() => import("@/components/header"));

const josefinSans = Kanit({ weight: ["400", "700"], subsets: ["latin"] });

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

type Layout = {
    children: React.ReactNode;
    params: {
        locale: (typeof locales)[number];
    };
};

export default function RootLayout({ children, params: { locale } }: Readonly<Layout>) {
    if (!locales.includes(locale)) notFound();
    const messages = useMessages();

    return (
        <html lang="en">
            <body className={josefinSans.className}>
                <NextIntlClientProvider locale={locale} messages={messages}>
                    <ThemeProvider attribute="class" defaultTheme="light" disableTransitionOnChange>
                        <StoreProvider>
                            <Header />
                            <main>{children}</main>
                        </StoreProvider>
                    </ThemeProvider>
                </NextIntlClientProvider>
            </body>
        </html>
    );
}
